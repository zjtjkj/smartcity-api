// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: mission/v1/mission.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlMissionBySingleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Enable bool   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ControlMissionBySingleRequest) Reset() {
	*x = ControlMissionBySingleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMissionBySingleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMissionBySingleRequest) ProtoMessage() {}

func (x *ControlMissionBySingleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMissionBySingleRequest.ProtoReflect.Descriptor instead.
func (*ControlMissionBySingleRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{0}
}

func (x *ControlMissionBySingleRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ControlMissionBySingleRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ControlMissionBySingleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlMissionBySingleReply) Reset() {
	*x = ControlMissionBySingleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMissionBySingleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMissionBySingleReply) ProtoMessage() {}

func (x *ControlMissionBySingleReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMissionBySingleReply.ProtoReflect.Descriptor instead.
func (*ControlMissionBySingleReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{1}
}

type ControlMissionByCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enable bool   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ControlMissionByCameraRequest) Reset() {
	*x = ControlMissionByCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMissionByCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMissionByCameraRequest) ProtoMessage() {}

func (x *ControlMissionByCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMissionByCameraRequest.ProtoReflect.Descriptor instead.
func (*ControlMissionByCameraRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{2}
}

func (x *ControlMissionByCameraRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ControlMissionByCameraRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type ControlMissionByCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlMissionByCameraReply) Reset() {
	*x = ControlMissionByCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlMissionByCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMissionByCameraReply) ProtoMessage() {}

func (x *ControlMissionByCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMissionByCameraReply.ProtoReflect.Descriptor instead.
func (*ControlMissionByCameraReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{3}
}

type ListMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMissionRequest) Reset() {
	*x = ListMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionRequest) ProtoMessage() {}

func (x *ListMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionRequest.ProtoReflect.Descriptor instead.
func (*ListMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{4}
}

type ListMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions []*Instance `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
}

func (x *ListMissionReply) Reset() {
	*x = ListMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionReply) ProtoMessage() {}

func (x *ListMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionReply.ProtoReflect.Descriptor instead.
func (*ListMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{5}
}

func (x *ListMissionReply) GetMissions() []*Instance {
	if x != nil {
		return x.Missions
	}
	return nil
}

type ConfigAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Object uint32 `protobuf:"varint,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *ConfigAreaRequest) Reset() {
	*x = ConfigAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAreaRequest) ProtoMessage() {}

func (x *ConfigAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAreaRequest.ProtoReflect.Descriptor instead.
func (*ConfigAreaRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigAreaRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigAreaRequest) GetObject() uint32 {
	if x != nil {
		return x.Object
	}
	return 0
}

type ConfigAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigAreaReply) Reset() {
	*x = ConfigAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAreaReply) ProtoMessage() {}

func (x *ConfigAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAreaReply.ProtoReflect.Descriptor instead.
func (*ConfigAreaReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{7}
}

type ConfigMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Start   uint32            `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End     uint32            `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	Reverse bool              `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
	Mode    uint32            `protobuf:"varint,5,opt,name=mode,proto3" json:"mode,omitempty"`
	Config  map[string]string `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Modules []uint32          `protobuf:"varint,7,rep,packed,name=modules,proto3" json:"modules,omitempty"`
}

func (x *ConfigMissionRequest) Reset() {
	*x = ConfigMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMissionRequest) ProtoMessage() {}

func (x *ConfigMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMissionRequest.ProtoReflect.Descriptor instead.
func (*ConfigMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigMissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigMissionRequest) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ConfigMissionRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ConfigMissionRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *ConfigMissionRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *ConfigMissionRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigMissionRequest) GetModules() []uint32 {
	if x != nil {
		return x.Modules
	}
	return nil
}

type ConfigMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigMissionReply) Reset() {
	*x = ConfigMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMissionReply) ProtoMessage() {}

func (x *ConfigMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMissionReply.ProtoReflect.Descriptor instead.
func (*ConfigMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{9}
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{10}
}

func (x *Point) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mission uint32                 `protobuf:"varint,2,opt,name=mission,proto3" json:"mission,omitempty"`
	Created *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Name    string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type    uint32                 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Points  []*Point               `protobuf:"bytes,6,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{11}
}

func (x *Area) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Area) GetMission() uint32 {
	if x != nil {
		return x.Mission
	}
	return 0
}

func (x *Area) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Area) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Area) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Camera    string                 `protobuf:"bytes,4,opt,name=camera,proto3" json:"camera,omitempty"`
	Preset    uint32                 `protobuf:"varint,5,opt,name=preset,proto3" json:"preset,omitempty"`
	Modules   []uint32               `protobuf:"varint,6,rep,packed,name=modules,proto3" json:"modules,omitempty"`
	Movable   bool                   `protobuf:"varint,7,opt,name=movable,proto3" json:"movable,omitempty"`
	Configure bool                   `protobuf:"varint,8,opt,name=configure,proto3" json:"configure,omitempty"`
	Start     uint32                 `protobuf:"varint,9,opt,name=start,proto3" json:"start,omitempty"`
	End       uint32                 `protobuf:"varint,10,opt,name=end,proto3" json:"end,omitempty"`
	Enable    bool                   `protobuf:"varint,11,opt,name=enable,proto3" json:"enable,omitempty"`
	Reverse   bool                   `protobuf:"varint,12,opt,name=reverse,proto3" json:"reverse,omitempty"`
	Mode      uint32                 `protobuf:"varint,13,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Config    map[string]string      `protobuf:"bytes,14,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{12}
}

func (x *Instance) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Instance) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetCamera() string {
	if x != nil {
		return x.Camera
	}
	return ""
}

func (x *Instance) GetPreset() uint32 {
	if x != nil {
		return x.Preset
	}
	return 0
}

func (x *Instance) GetModules() []uint32 {
	if x != nil {
		return x.Modules
	}
	return nil
}

func (x *Instance) GetMovable() bool {
	if x != nil {
		return x.Movable
	}
	return false
}

func (x *Instance) GetConfigure() bool {
	if x != nil {
		return x.Configure
	}
	return false
}

func (x *Instance) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Instance) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Instance) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Instance) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

func (x *Instance) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Instance) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mission uint32   `protobuf:"varint,1,opt,name=mission,proto3" json:"mission,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type    uint32   `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Points  []*Point `protobuf:"bytes,4,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *CreateAreaRequest) Reset() {
	*x = CreateAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAreaRequest) ProtoMessage() {}

func (x *CreateAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAreaRequest.ProtoReflect.Descriptor instead.
func (*CreateAreaRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{13}
}

func (x *CreateAreaRequest) GetMission() uint32 {
	if x != nil {
		return x.Mission
	}
	return 0
}

func (x *CreateAreaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAreaRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateAreaRequest) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type CreateAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area *Area `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *CreateAreaReply) Reset() {
	*x = CreateAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAreaReply) ProtoMessage() {}

func (x *CreateAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAreaReply.ProtoReflect.Descriptor instead.
func (*CreateAreaReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAreaReply) GetArea() *Area {
	if x != nil {
		return x.Area
	}
	return nil
}

type UpdateAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Points []*Point `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *UpdateAreaRequest) Reset() {
	*x = UpdateAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAreaRequest) ProtoMessage() {}

func (x *UpdateAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAreaRequest.ProtoReflect.Descriptor instead.
func (*UpdateAreaRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateAreaRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAreaRequest) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type UpdateAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAreaReply) Reset() {
	*x = UpdateAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAreaReply) ProtoMessage() {}

func (x *UpdateAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAreaReply.ProtoReflect.Descriptor instead.
func (*UpdateAreaReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{16}
}

type DeleteAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAreaRequest) Reset() {
	*x = DeleteAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAreaRequest) ProtoMessage() {}

func (x *DeleteAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAreaRequest.ProtoReflect.Descriptor instead.
func (*DeleteAreaRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteAreaRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAreaReply) Reset() {
	*x = DeleteAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAreaReply) ProtoMessage() {}

func (x *DeleteAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAreaReply.ProtoReflect.Descriptor instead.
func (*DeleteAreaReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{18}
}

type ListAreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mission uint32 `protobuf:"varint,1,opt,name=mission,proto3" json:"mission,omitempty"`
}

func (x *ListAreaRequest) Reset() {
	*x = ListAreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAreaRequest) ProtoMessage() {}

func (x *ListAreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAreaRequest.ProtoReflect.Descriptor instead.
func (*ListAreaRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{19}
}

func (x *ListAreaRequest) GetMission() uint32 {
	if x != nil {
		return x.Mission
	}
	return 0
}

type ListAreaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Areas []*Area `protobuf:"bytes,1,rep,name=areas,proto3" json:"areas,omitempty"`
}

func (x *ListAreaReply) Reset() {
	*x = ListAreaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAreaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAreaReply) ProtoMessage() {}

func (x *ListAreaReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAreaReply.ProtoReflect.Descriptor instead.
func (*ListAreaReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{20}
}

func (x *ListAreaReply) GetAreas() []*Area {
	if x != nil {
		return x.Areas
	}
	return nil
}

type CreateMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Camera  string `protobuf:"bytes,2,opt,name=camera,proto3" json:"camera,omitempty"`
	Movable bool   `protobuf:"varint,3,opt,name=movable,proto3" json:"movable,omitempty"`
	Preset  uint32 `protobuf:"varint,4,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *CreateMissionRequest) Reset() {
	*x = CreateMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMissionRequest) ProtoMessage() {}

func (x *CreateMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMissionRequest.ProtoReflect.Descriptor instead.
func (*CreateMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{21}
}

func (x *CreateMissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMissionRequest) GetCamera() string {
	if x != nil {
		return x.Camera
	}
	return ""
}

func (x *CreateMissionRequest) GetMovable() bool {
	if x != nil {
		return x.Movable
	}
	return false
}

func (x *CreateMissionRequest) GetPreset() uint32 {
	if x != nil {
		return x.Preset
	}
	return 0
}

type CreateMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mission *Instance `protobuf:"bytes,1,opt,name=mission,proto3" json:"mission,omitempty"`
}

func (x *CreateMissionReply) Reset() {
	*x = CreateMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMissionReply) ProtoMessage() {}

func (x *CreateMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMissionReply.ProtoReflect.Descriptor instead.
func (*CreateMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{22}
}

func (x *CreateMissionReply) GetMission() *Instance {
	if x != nil {
		return x.Mission
	}
	return nil
}

type UpdateMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateMissionRequest) Reset() {
	*x = UpdateMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMissionRequest) ProtoMessage() {}

func (x *UpdateMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateMissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMissionReply) Reset() {
	*x = UpdateMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMissionReply) ProtoMessage() {}

func (x *UpdateMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMissionReply.ProtoReflect.Descriptor instead.
func (*UpdateMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{24}
}

type DeleteMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMissionRequest) Reset() {
	*x = DeleteMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMissionRequest) ProtoMessage() {}

func (x *DeleteMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteMissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMissionReply) Reset() {
	*x = DeleteMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMissionReply) ProtoMessage() {}

func (x *DeleteMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMissionReply.ProtoReflect.Descriptor instead.
func (*DeleteMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{26}
}

type GetMissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMissionRequest) Reset() {
	*x = GetMissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMissionRequest) ProtoMessage() {}

func (x *GetMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMissionRequest.ProtoReflect.Descriptor instead.
func (*GetMissionRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{27}
}

func (x *GetMissionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMissionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mission *Instance `protobuf:"bytes,1,opt,name=mission,proto3" json:"mission,omitempty"`
}

func (x *GetMissionReply) Reset() {
	*x = GetMissionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMissionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMissionReply) ProtoMessage() {}

func (x *GetMissionReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMissionReply.ProtoReflect.Descriptor instead.
func (*GetMissionReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{28}
}

func (x *GetMissionReply) GetMission() *Instance {
	if x != nil {
		return x.Mission
	}
	return nil
}

type ListMissionByCameraAndPresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Preset uint32 `protobuf:"varint,2,opt,name=preset,proto3" json:"preset,omitempty"`
}

func (x *ListMissionByCameraAndPresetRequest) Reset() {
	*x = ListMissionByCameraAndPresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionByCameraAndPresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionByCameraAndPresetRequest) ProtoMessage() {}

func (x *ListMissionByCameraAndPresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionByCameraAndPresetRequest.ProtoReflect.Descriptor instead.
func (*ListMissionByCameraAndPresetRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{29}
}

func (x *ListMissionByCameraAndPresetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListMissionByCameraAndPresetRequest) GetPreset() uint32 {
	if x != nil {
		return x.Preset
	}
	return 0
}

type ListMissionByCameraAndPresetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions []*Instance `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
}

func (x *ListMissionByCameraAndPresetReply) Reset() {
	*x = ListMissionByCameraAndPresetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionByCameraAndPresetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionByCameraAndPresetReply) ProtoMessage() {}

func (x *ListMissionByCameraAndPresetReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionByCameraAndPresetReply.ProtoReflect.Descriptor instead.
func (*ListMissionByCameraAndPresetReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{30}
}

func (x *ListMissionByCameraAndPresetReply) GetMissions() []*Instance {
	if x != nil {
		return x.Missions
	}
	return nil
}

type ListMissionByCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListMissionByCameraRequest) Reset() {
	*x = ListMissionByCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionByCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionByCameraRequest) ProtoMessage() {}

func (x *ListMissionByCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionByCameraRequest.ProtoReflect.Descriptor instead.
func (*ListMissionByCameraRequest) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{31}
}

func (x *ListMissionByCameraRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMissionByCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Missions []*Instance `protobuf:"bytes,1,rep,name=missions,proto3" json:"missions,omitempty"`
}

func (x *ListMissionByCameraReply) Reset() {
	*x = ListMissionByCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mission_v1_mission_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMissionByCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMissionByCameraReply) ProtoMessage() {}

func (x *ListMissionByCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_mission_v1_mission_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMissionByCameraReply.ProtoReflect.Descriptor instead.
func (*ListMissionByCameraReply) Descriptor() ([]byte, []int) {
	return file_mission_v1_mission_proto_rawDescGZIP(), []int{32}
}

func (x *ListMissionByCameraReply) GetMissions() []*Instance {
	if x != nil {
		return x.Missions
	}
	return nil
}

var File_mission_v1_mission_proto protoreflect.FileDescriptor

var file_mission_v1_mission_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x1d, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x47, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x48, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9b, 0x02, 0x0a, 0x14, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x0a,
	0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x79, 0x22, 0xbd, 0x01, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0xcd, 0x03, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x52, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x22,
	0x74, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x3a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x07, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x23, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x59, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0x8b, 0x0f, 0x0a, 0x07, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x75, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6e, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01,
	0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x33,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x22, 0x1c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x93, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x69, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x1a, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x65, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6b, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x65, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x73, 0x2f, 0x7b, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x7d, 0x12, 0x75, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72,
	0x65, 0x61, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x99, 0x01, 0x0a, 0x16,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x99, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x1b, 0x5a, 0x19, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mission_v1_mission_proto_rawDescOnce sync.Once
	file_mission_v1_mission_proto_rawDescData = file_mission_v1_mission_proto_rawDesc
)

func file_mission_v1_mission_proto_rawDescGZIP() []byte {
	file_mission_v1_mission_proto_rawDescOnce.Do(func() {
		file_mission_v1_mission_proto_rawDescData = protoimpl.X.CompressGZIP(file_mission_v1_mission_proto_rawDescData)
	})
	return file_mission_v1_mission_proto_rawDescData
}

var file_mission_v1_mission_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_mission_v1_mission_proto_goTypes = []interface{}{
	(*ControlMissionBySingleRequest)(nil),       // 0: api.mission.v1.ControlMissionBySingleRequest
	(*ControlMissionBySingleReply)(nil),         // 1: api.mission.v1.ControlMissionBySingleReply
	(*ControlMissionByCameraRequest)(nil),       // 2: api.mission.v1.ControlMissionByCameraRequest
	(*ControlMissionByCameraReply)(nil),         // 3: api.mission.v1.ControlMissionByCameraReply
	(*ListMissionRequest)(nil),                  // 4: api.mission.v1.ListMissionRequest
	(*ListMissionReply)(nil),                    // 5: api.mission.v1.ListMissionReply
	(*ConfigAreaRequest)(nil),                   // 6: api.mission.v1.ConfigAreaRequest
	(*ConfigAreaReply)(nil),                     // 7: api.mission.v1.ConfigAreaReply
	(*ConfigMissionRequest)(nil),                // 8: api.mission.v1.ConfigMissionRequest
	(*ConfigMissionReply)(nil),                  // 9: api.mission.v1.ConfigMissionReply
	(*Point)(nil),                               // 10: api.mission.v1.Point
	(*Area)(nil),                                // 11: api.mission.v1.Area
	(*Instance)(nil),                            // 12: api.mission.v1.Instance
	(*CreateAreaRequest)(nil),                   // 13: api.mission.v1.CreateAreaRequest
	(*CreateAreaReply)(nil),                     // 14: api.mission.v1.CreateAreaReply
	(*UpdateAreaRequest)(nil),                   // 15: api.mission.v1.UpdateAreaRequest
	(*UpdateAreaReply)(nil),                     // 16: api.mission.v1.UpdateAreaReply
	(*DeleteAreaRequest)(nil),                   // 17: api.mission.v1.DeleteAreaRequest
	(*DeleteAreaReply)(nil),                     // 18: api.mission.v1.DeleteAreaReply
	(*ListAreaRequest)(nil),                     // 19: api.mission.v1.ListAreaRequest
	(*ListAreaReply)(nil),                       // 20: api.mission.v1.ListAreaReply
	(*CreateMissionRequest)(nil),                // 21: api.mission.v1.CreateMissionRequest
	(*CreateMissionReply)(nil),                  // 22: api.mission.v1.CreateMissionReply
	(*UpdateMissionRequest)(nil),                // 23: api.mission.v1.UpdateMissionRequest
	(*UpdateMissionReply)(nil),                  // 24: api.mission.v1.UpdateMissionReply
	(*DeleteMissionRequest)(nil),                // 25: api.mission.v1.DeleteMissionRequest
	(*DeleteMissionReply)(nil),                  // 26: api.mission.v1.DeleteMissionReply
	(*GetMissionRequest)(nil),                   // 27: api.mission.v1.GetMissionRequest
	(*GetMissionReply)(nil),                     // 28: api.mission.v1.GetMissionReply
	(*ListMissionByCameraAndPresetRequest)(nil), // 29: api.mission.v1.ListMissionByCameraAndPresetRequest
	(*ListMissionByCameraAndPresetReply)(nil),   // 30: api.mission.v1.ListMissionByCameraAndPresetReply
	(*ListMissionByCameraRequest)(nil),          // 31: api.mission.v1.ListMissionByCameraRequest
	(*ListMissionByCameraReply)(nil),            // 32: api.mission.v1.ListMissionByCameraReply
	nil,                                         // 33: api.mission.v1.ConfigMissionRequest.ConfigEntry
	nil,                                         // 34: api.mission.v1.Instance.ConfigEntry
	(*timestamppb.Timestamp)(nil),               // 35: google.protobuf.Timestamp
}
var file_mission_v1_mission_proto_depIdxs = []int32{
	12, // 0: api.mission.v1.ListMissionReply.missions:type_name -> api.mission.v1.Instance
	33, // 1: api.mission.v1.ConfigMissionRequest.config:type_name -> api.mission.v1.ConfigMissionRequest.ConfigEntry
	35, // 2: api.mission.v1.Area.created:type_name -> google.protobuf.Timestamp
	10, // 3: api.mission.v1.Area.points:type_name -> api.mission.v1.Point
	35, // 4: api.mission.v1.Instance.created:type_name -> google.protobuf.Timestamp
	34, // 5: api.mission.v1.Instance.config:type_name -> api.mission.v1.Instance.ConfigEntry
	10, // 6: api.mission.v1.CreateAreaRequest.points:type_name -> api.mission.v1.Point
	11, // 7: api.mission.v1.CreateAreaReply.area:type_name -> api.mission.v1.Area
	10, // 8: api.mission.v1.UpdateAreaRequest.points:type_name -> api.mission.v1.Point
	11, // 9: api.mission.v1.ListAreaReply.areas:type_name -> api.mission.v1.Area
	12, // 10: api.mission.v1.CreateMissionReply.mission:type_name -> api.mission.v1.Instance
	12, // 11: api.mission.v1.GetMissionReply.mission:type_name -> api.mission.v1.Instance
	12, // 12: api.mission.v1.ListMissionByCameraAndPresetReply.missions:type_name -> api.mission.v1.Instance
	12, // 13: api.mission.v1.ListMissionByCameraReply.missions:type_name -> api.mission.v1.Instance
	21, // 14: api.mission.v1.Mission.CreateMission:input_type -> api.mission.v1.CreateMissionRequest
	23, // 15: api.mission.v1.Mission.UpdateMission:input_type -> api.mission.v1.UpdateMissionRequest
	25, // 16: api.mission.v1.Mission.DeleteMission:input_type -> api.mission.v1.DeleteMissionRequest
	27, // 17: api.mission.v1.Mission.GetMission:input_type -> api.mission.v1.GetMissionRequest
	29, // 18: api.mission.v1.Mission.ListMissionByCameraAndPreset:input_type -> api.mission.v1.ListMissionByCameraAndPresetRequest
	31, // 19: api.mission.v1.Mission.ListMissionByCamera:input_type -> api.mission.v1.ListMissionByCameraRequest
	4,  // 20: api.mission.v1.Mission.ListMission:input_type -> api.mission.v1.ListMissionRequest
	8,  // 21: api.mission.v1.Mission.ConfigMission:input_type -> api.mission.v1.ConfigMissionRequest
	13, // 22: api.mission.v1.Mission.CreateArea:input_type -> api.mission.v1.CreateAreaRequest
	15, // 23: api.mission.v1.Mission.UpdateArea:input_type -> api.mission.v1.UpdateAreaRequest
	17, // 24: api.mission.v1.Mission.DeleteArea:input_type -> api.mission.v1.DeleteAreaRequest
	19, // 25: api.mission.v1.Mission.ListArea:input_type -> api.mission.v1.ListAreaRequest
	6,  // 26: api.mission.v1.Mission.ConfigArea:input_type -> api.mission.v1.ConfigAreaRequest
	0,  // 27: api.mission.v1.Mission.ControlMissionBySingle:input_type -> api.mission.v1.ControlMissionBySingleRequest
	2,  // 28: api.mission.v1.Mission.ControlMissionByCamera:input_type -> api.mission.v1.ControlMissionByCameraRequest
	22, // 29: api.mission.v1.Mission.CreateMission:output_type -> api.mission.v1.CreateMissionReply
	24, // 30: api.mission.v1.Mission.UpdateMission:output_type -> api.mission.v1.UpdateMissionReply
	26, // 31: api.mission.v1.Mission.DeleteMission:output_type -> api.mission.v1.DeleteMissionReply
	28, // 32: api.mission.v1.Mission.GetMission:output_type -> api.mission.v1.GetMissionReply
	30, // 33: api.mission.v1.Mission.ListMissionByCameraAndPreset:output_type -> api.mission.v1.ListMissionByCameraAndPresetReply
	32, // 34: api.mission.v1.Mission.ListMissionByCamera:output_type -> api.mission.v1.ListMissionByCameraReply
	5,  // 35: api.mission.v1.Mission.ListMission:output_type -> api.mission.v1.ListMissionReply
	9,  // 36: api.mission.v1.Mission.ConfigMission:output_type -> api.mission.v1.ConfigMissionReply
	14, // 37: api.mission.v1.Mission.CreateArea:output_type -> api.mission.v1.CreateAreaReply
	16, // 38: api.mission.v1.Mission.UpdateArea:output_type -> api.mission.v1.UpdateAreaReply
	18, // 39: api.mission.v1.Mission.DeleteArea:output_type -> api.mission.v1.DeleteAreaReply
	20, // 40: api.mission.v1.Mission.ListArea:output_type -> api.mission.v1.ListAreaReply
	7,  // 41: api.mission.v1.Mission.ConfigArea:output_type -> api.mission.v1.ConfigAreaReply
	1,  // 42: api.mission.v1.Mission.ControlMissionBySingle:output_type -> api.mission.v1.ControlMissionBySingleReply
	3,  // 43: api.mission.v1.Mission.ControlMissionByCamera:output_type -> api.mission.v1.ControlMissionByCameraReply
	29, // [29:44] is the sub-list for method output_type
	14, // [14:29] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_mission_v1_mission_proto_init() }
func file_mission_v1_mission_proto_init() {
	if File_mission_v1_mission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mission_v1_mission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMissionBySingleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMissionBySingleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMissionByCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlMissionByCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAreaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMissionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionByCameraAndPresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionByCameraAndPresetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionByCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mission_v1_mission_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMissionByCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mission_v1_mission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mission_v1_mission_proto_goTypes,
		DependencyIndexes: file_mission_v1_mission_proto_depIdxs,
		MessageInfos:      file_mission_v1_mission_proto_msgTypes,
	}.Build()
	File_mission_v1_mission_proto = out.File
	file_mission_v1_mission_proto_rawDesc = nil
	file_mission_v1_mission_proto_goTypes = nil
	file_mission_v1_mission_proto_depIdxs = nil
}
