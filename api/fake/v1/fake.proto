syntax = "proto3";

package api.fake.v1;

option go_package = "events/api/fake/v1;v1";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service Fake {
	rpc CreateFakeEvent (CreateFakeEventRequest) returns (CreateFakeEventReply) {}
}

message CreateFakeEventRequest {
	string id = 1 [(validate.rules).string = {len_bytes: 36}];
	uint32 mid = 2 [(validate.rules).uint32 = {gt: 0}];
	string type = 3 [(validate.rules).string = {min_len: 1}];
	bytes image = 4 [(validate.rules).bytes = {min_len: 1}];
	bool start = 5;
	bool finished = 6;
	repeated Object objects = 7 [(validate.rules).repeated = {min_items: 1}];
	google.protobuf.Timestamp created = 8;
	bool push = 9;
}
message CreateFakeEventReply {}



message Point {
	uint32 x = 1 [(validate.rules).uint32 = {gte: 0, lte: 10000}];
	uint32 y = 2 [(validate.rules).uint32 = {gte: 0, lte: 10000}];
}


message Object {
	string id = 1 [(validate.rules).string = {min_len: 1}];
	uint32 area = 2;
	repeated Point points = 3 [(validate.rules).repeated = {min_items: 2, max_items: 2}];
	map<string, string> properties = 4  [(validate.rules).map = {min_pairs: 1}];
}