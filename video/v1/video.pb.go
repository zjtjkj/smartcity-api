// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: api/video/v1/video.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Device_Status int32

const (
	Device_Unknown Device_Status = 0
	Device_Online  Device_Status = 1
	Device_Offline Device_Status = 2
)

// Enum value maps for Device_Status.
var (
	Device_Status_name = map[int32]string{
		0: "Unknown",
		1: "Online",
		2: "Offline",
	}
	Device_Status_value = map[string]int32{
		"Unknown": 0,
		"Online":  1,
		"Offline": 2,
	}
)

func (x Device_Status) Enum() *Device_Status {
	p := new(Device_Status)
	*p = x
	return p
}

func (x Device_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Device_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_video_v1_video_proto_enumTypes[0].Descriptor()
}

func (Device_Status) Type() protoreflect.EnumType {
	return &file_api_video_v1_video_proto_enumTypes[0]
}

func (x Device_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Device_Status.Descriptor instead.
func (Device_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{0, 0}
}

type Channel_Status int32

const (
	Channel_Unknown Channel_Status = 0
	Channel_Online  Channel_Status = 1
	Channel_Offline Channel_Status = 2
)

// Enum value maps for Channel_Status.
var (
	Channel_Status_name = map[int32]string{
		0: "Unknown",
		1: "Online",
		2: "Offline",
	}
	Channel_Status_value = map[string]int32{
		"Unknown": 0,
		"Online":  1,
		"Offline": 2,
	}
)

func (x Channel_Status) Enum() *Channel_Status {
	p := new(Channel_Status)
	*p = x
	return p
}

func (x Channel_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_video_v1_video_proto_enumTypes[1].Descriptor()
}

func (Channel_Status) Type() protoreflect.EnumType {
	return &file_api_video_v1_video_proto_enumTypes[1]
}

func (x Channel_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel_Status.Descriptor instead.
func (Channel_Status) EnumDescriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{1, 0}
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Manufacturer string        `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model        string        `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Firmware     string        `protobuf:"bytes,5,opt,name=firmware,proto3" json:"firmware,omitempty"`
	Transport    string        `protobuf:"bytes,6,opt,name=transport,proto3" json:"transport,omitempty"`
	StreamMode   string        `protobuf:"bytes,7,opt,name=stream_mode,json=streamMode,proto3" json:"stream_mode,omitempty"`
	Host         string        `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Status       Device_Status `protobuf:"varint,9,opt,name=status,proto3,enum=api.video.v1.Device_Status" json:"status,omitempty"`
	RegisterTime string        `protobuf:"bytes,10,opt,name=register_time,json=registerTime,proto3" json:"register_time,omitempty"`
	ChannelCount int32         `protobuf:"varint,11,opt,name=channel_count,json=channelCount,proto3" json:"channel_count,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetFirmware() string {
	if x != nil {
		return x.Firmware
	}
	return ""
}

func (x *Device) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *Device) GetStreamMode() string {
	if x != nil {
		return x.StreamMode
	}
	return ""
}

func (x *Device) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Device) GetStatus() Device_Status {
	if x != nil {
		return x.Status
	}
	return Device_Unknown
}

func (x *Device) GetRegisterTime() string {
	if x != nil {
		return x.RegisterTime
	}
	return ""
}

func (x *Device) GetChannelCount() int32 {
	if x != nil {
		return x.ChannelCount
	}
	return 0
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId    string         `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name        string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Manufacture string         `protobuf:"bytes,4,opt,name=manufacture,proto3" json:"manufacture,omitempty"`
	Model       string         `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	Address     string         `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	IpAddress   string         `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port        int32          `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	Longitude   float32        `protobuf:"fixed32,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float32        `protobuf:"fixed32,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Status      Channel_Status `protobuf:"varint,11,opt,name=status,proto3,enum=api.video.v1.Channel_Status" json:"status,omitempty"`
	Ptztype     int32          `protobuf:"varint,12,opt,name=ptztype,proto3" json:"ptztype,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{1}
}

func (x *Channel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Channel) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Channel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Channel) GetManufacture() string {
	if x != nil {
		return x.Manufacture
	}
	return ""
}

func (x *Channel) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Channel) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Channel) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Channel) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Channel) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Channel) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Channel) GetStatus() Channel_Status {
	if x != nil {
		return x.Status
	}
	return Channel_Unknown
}

func (x *Channel) GetPtztype() int32 {
	if x != nil {
		return x.Ptztype
	}
	return 0
}

type FindDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size  int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FindDevicesRequest) Reset() {
	*x = FindDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDevicesRequest) ProtoMessage() {}

func (x *FindDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDevicesRequest.ProtoReflect.Descriptor instead.
func (*FindDevicesRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{2}
}

func (x *FindDevicesRequest) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FindDevicesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FindDevicesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   int64     `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size    int64     `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Page    int64     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Total   int64     `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Devices []*Device `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *FindDevicesReply) Reset() {
	*x = FindDevicesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDevicesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDevicesReply) ProtoMessage() {}

func (x *FindDevicesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDevicesReply.ProtoReflect.Descriptor instead.
func (*FindDevicesReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{3}
}

func (x *FindDevicesReply) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FindDevicesReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FindDevicesReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindDevicesReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindDevicesReply) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type FindChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int64  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size     int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Keyword  string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *FindChannelsRequest) Reset() {
	*x = FindChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindChannelsRequest) ProtoMessage() {}

func (x *FindChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindChannelsRequest.ProtoReflect.Descriptor instead.
func (*FindChannelsRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{4}
}

func (x *FindChannelsRequest) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FindChannelsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FindChannelsRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *FindChannelsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type FindChannelsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    int64      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Size     int64      `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Page     int64      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Total    int64      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Channels []*Channel `protobuf:"bytes,5,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *FindChannelsReply) Reset() {
	*x = FindChannelsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindChannelsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindChannelsReply) ProtoMessage() {}

func (x *FindChannelsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindChannelsReply.ProtoReflect.Descriptor instead.
func (*FindChannelsReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{5}
}

func (x *FindChannelsReply) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FindChannelsReply) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FindChannelsReply) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindChannelsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindChannelsReply) GetChannels() []*Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type StartPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *StartPlayRequest) Reset() {
	*x = StartPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlayRequest) ProtoMessage() {}

func (x *StartPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlayRequest.ProtoReflect.Descriptor instead.
func (*StartPlayRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{6}
}

func (x *StartPlayRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StartPlayRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type StartPlayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App           string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Stream        string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	DeviceId      string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ChannelId     string `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Flv           string `protobuf:"bytes,5,opt,name=flv,proto3" json:"flv,omitempty"`
	Rtsp          string `protobuf:"bytes,6,opt,name=rtsp,proto3" json:"rtsp,omitempty"`
	MediaServerId string `protobuf:"bytes,7,opt,name=media_server_id,json=mediaServerId,proto3" json:"media_server_id,omitempty"`
}

func (x *StartPlayReply) Reset() {
	*x = StartPlayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPlayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlayReply) ProtoMessage() {}

func (x *StartPlayReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlayReply.ProtoReflect.Descriptor instead.
func (*StartPlayReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{7}
}

func (x *StartPlayReply) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *StartPlayReply) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *StartPlayReply) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StartPlayReply) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *StartPlayReply) GetFlv() string {
	if x != nil {
		return x.Flv
	}
	return ""
}

func (x *StartPlayReply) GetRtsp() string {
	if x != nil {
		return x.Rtsp
	}
	return ""
}

func (x *StartPlayReply) GetMediaServerId() string {
	if x != nil {
		return x.MediaServerId
	}
	return ""
}

type StopPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *StopPlayRequest) Reset() {
	*x = StopPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlayRequest) ProtoMessage() {}

func (x *StopPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlayRequest.ProtoReflect.Descriptor instead.
func (*StopPlayRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{8}
}

func (x *StopPlayRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StopPlayRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type StopPlayReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopPlayReply) Reset() {
	*x = StopPlayReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPlayReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlayReply) ProtoMessage() {}

func (x *StopPlayReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlayReply.ProtoReflect.Descriptor instead.
func (*StopPlayReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{9}
}

type StartProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App    string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Stream string `protobuf:"bytes,3,opt,name=stream,proto3" json:"stream,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"` // 拉流地址，例如rtmp://live.hkstv.hk.lxdns.com/live/hks2
}

func (x *StartProxyRequest) Reset() {
	*x = StartProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProxyRequest) ProtoMessage() {}

func (x *StartProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProxyRequest.ProtoReflect.Descriptor instead.
func (*StartProxyRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{10}
}

func (x *StartProxyRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *StartProxyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartProxyRequest) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *StartProxyRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type StartProxyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App           string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Stream        string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
	Flv           string `protobuf:"bytes,3,opt,name=flv,proto3" json:"flv,omitempty"`
	Rtsp          string `protobuf:"bytes,4,opt,name=rtsp,proto3" json:"rtsp,omitempty"`
	MediaServerId string `protobuf:"bytes,5,opt,name=media_server_id,json=mediaServerId,proto3" json:"media_server_id,omitempty"`
}

func (x *StartProxyReply) Reset() {
	*x = StartProxyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProxyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProxyReply) ProtoMessage() {}

func (x *StartProxyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProxyReply.ProtoReflect.Descriptor instead.
func (*StartProxyReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{11}
}

func (x *StartProxyReply) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *StartProxyReply) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *StartProxyReply) GetFlv() string {
	if x != nil {
		return x.Flv
	}
	return ""
}

func (x *StartProxyReply) GetRtsp() string {
	if x != nil {
		return x.Rtsp
	}
	return ""
}

func (x *StartProxyReply) GetMediaServerId() string {
	if x != nil {
		return x.MediaServerId
	}
	return ""
}

type StopProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App    string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Stream string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *StopProxyRequest) Reset() {
	*x = StopProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopProxyRequest) ProtoMessage() {}

func (x *StopProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopProxyRequest.ProtoReflect.Descriptor instead.
func (*StopProxyRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{12}
}

func (x *StopProxyRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *StopProxyRequest) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type StopProxyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopProxyReply) Reset() {
	*x = StopProxyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopProxyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopProxyReply) ProtoMessage() {}

func (x *StopProxyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopProxyReply.ProtoReflect.Descriptor instead.
func (*StopProxyReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{13}
}

type DeleteProxyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App    string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Stream string `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *DeleteProxyRequest) Reset() {
	*x = DeleteProxyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyRequest) ProtoMessage() {}

func (x *DeleteProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyRequest.ProtoReflect.Descriptor instead.
func (*DeleteProxyRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteProxyRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *DeleteProxyRequest) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type DeleteProxyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProxyReply) Reset() {
	*x = DeleteProxyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProxyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProxyReply) ProtoMessage() {}

func (x *DeleteProxyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProxyReply.ProtoReflect.Descriptor instead.
func (*DeleteProxyReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{15}
}

type ControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Command   string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{16}
}

func (x *ControlRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ControlRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ControlRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type ControlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ControlReply) Reset() {
	*x = ControlReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_video_v1_video_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlReply) ProtoMessage() {}

func (x *ControlReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_video_v1_video_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlReply.ProtoReflect.Descriptor instead.
func (*ControlReply) Descriptor() ([]byte, []int) {
	return file_api_video_v1_video_proto_rawDescGZIP(), []int{17}
}

var File_api_video_v1_video_proto protoreflect.FileDescriptor

var file_api_video_v1_video_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x22, 0x89, 0x03,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x74, 0x7a, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x74, 0x7a, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x22, 0x3e, 0x0a, 0x12, 0x46, 0x69, 0x6e,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x46, 0x69,
	0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x76, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x6c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x6c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x74, 0x73, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x74, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d,
	0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x0f, 0x0a,
	0x0d, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x63,
	0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x66, 0x6c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x74, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x74, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3c, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x10, 0x0a,
	0x0e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x3e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22,
	0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xed, 0x06, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x72, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x62, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a, 0x0c, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x62, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x3a, 0x01,
	0x2a, 0x12, 0x66, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x62,
	0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x08, 0x53, 0x74, 0x6f,
	0x70, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x62, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x01,
	0x2a, 0x12, 0x6c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12,
	0x68, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0x27, 0x0a, 0x0c, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_video_v1_video_proto_rawDescOnce sync.Once
	file_api_video_v1_video_proto_rawDescData = file_api_video_v1_video_proto_rawDesc
)

func file_api_video_v1_video_proto_rawDescGZIP() []byte {
	file_api_video_v1_video_proto_rawDescOnce.Do(func() {
		file_api_video_v1_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_video_v1_video_proto_rawDescData)
	})
	return file_api_video_v1_video_proto_rawDescData
}

var file_api_video_v1_video_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_video_v1_video_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_video_v1_video_proto_goTypes = []interface{}{
	(Device_Status)(0),          // 0: api.video.v1.Device.Status
	(Channel_Status)(0),         // 1: api.video.v1.Channel.Status
	(*Device)(nil),              // 2: api.video.v1.Device
	(*Channel)(nil),             // 3: api.video.v1.Channel
	(*FindDevicesRequest)(nil),  // 4: api.video.v1.FindDevicesRequest
	(*FindDevicesReply)(nil),    // 5: api.video.v1.FindDevicesReply
	(*FindChannelsRequest)(nil), // 6: api.video.v1.FindChannelsRequest
	(*FindChannelsReply)(nil),   // 7: api.video.v1.FindChannelsReply
	(*StartPlayRequest)(nil),    // 8: api.video.v1.StartPlayRequest
	(*StartPlayReply)(nil),      // 9: api.video.v1.StartPlayReply
	(*StopPlayRequest)(nil),     // 10: api.video.v1.StopPlayRequest
	(*StopPlayReply)(nil),       // 11: api.video.v1.StopPlayReply
	(*StartProxyRequest)(nil),   // 12: api.video.v1.StartProxyRequest
	(*StartProxyReply)(nil),     // 13: api.video.v1.StartProxyReply
	(*StopProxyRequest)(nil),    // 14: api.video.v1.StopProxyRequest
	(*StopProxyReply)(nil),      // 15: api.video.v1.StopProxyReply
	(*DeleteProxyRequest)(nil),  // 16: api.video.v1.DeleteProxyRequest
	(*DeleteProxyReply)(nil),    // 17: api.video.v1.DeleteProxyReply
	(*ControlRequest)(nil),      // 18: api.video.v1.ControlRequest
	(*ControlReply)(nil),        // 19: api.video.v1.ControlReply
}
var file_api_video_v1_video_proto_depIdxs = []int32{
	0,  // 0: api.video.v1.Device.status:type_name -> api.video.v1.Device.Status
	1,  // 1: api.video.v1.Channel.status:type_name -> api.video.v1.Channel.Status
	2,  // 2: api.video.v1.FindDevicesReply.devices:type_name -> api.video.v1.Device
	3,  // 3: api.video.v1.FindChannelsReply.channels:type_name -> api.video.v1.Channel
	4,  // 4: api.video.v1.Video.FindDevices:input_type -> api.video.v1.FindDevicesRequest
	6,  // 5: api.video.v1.Video.FindChannels:input_type -> api.video.v1.FindChannelsRequest
	8,  // 6: api.video.v1.Video.StartPlay:input_type -> api.video.v1.StartPlayRequest
	10, // 7: api.video.v1.Video.StopPlay:input_type -> api.video.v1.StopPlayRequest
	18, // 8: api.video.v1.Video.Control:input_type -> api.video.v1.ControlRequest
	12, // 9: api.video.v1.Video.StartProxy:input_type -> api.video.v1.StartProxyRequest
	14, // 10: api.video.v1.Video.StopProxy:input_type -> api.video.v1.StopProxyRequest
	16, // 11: api.video.v1.Video.DeleteProxy:input_type -> api.video.v1.DeleteProxyRequest
	5,  // 12: api.video.v1.Video.FindDevices:output_type -> api.video.v1.FindDevicesReply
	7,  // 13: api.video.v1.Video.FindChannels:output_type -> api.video.v1.FindChannelsReply
	9,  // 14: api.video.v1.Video.StartPlay:output_type -> api.video.v1.StartPlayReply
	11, // 15: api.video.v1.Video.StopPlay:output_type -> api.video.v1.StopPlayReply
	19, // 16: api.video.v1.Video.Control:output_type -> api.video.v1.ControlReply
	13, // 17: api.video.v1.Video.StartProxy:output_type -> api.video.v1.StartProxyReply
	15, // 18: api.video.v1.Video.StopProxy:output_type -> api.video.v1.StopProxyReply
	17, // 19: api.video.v1.Video.DeleteProxy:output_type -> api.video.v1.DeleteProxyReply
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_video_v1_video_proto_init() }
func file_api_video_v1_video_proto_init() {
	if File_api_video_v1_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_video_v1_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDevicesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindChannelsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPlayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPlayReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProxyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopProxyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProxyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProxyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_video_v1_video_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_video_v1_video_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_video_v1_video_proto_goTypes,
		DependencyIndexes: file_api_video_v1_video_proto_depIdxs,
		EnumInfos:         file_api_video_v1_video_proto_enumTypes,
		MessageInfos:      file_api_video_v1_video_proto_msgTypes,
	}.Build()
	File_api_video_v1_video_proto = out.File
	file_api_video_v1_video_proto_rawDesc = nil
	file_api_video_v1_video_proto_goTypes = nil
	file_api_video_v1_video_proto_depIdxs = nil
}
