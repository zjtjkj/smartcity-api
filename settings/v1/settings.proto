syntax = "proto3";

package api.settings.v1;

option go_package = "settings/api/settings/v1;v1";
import "google/api/annotations.proto";
import "validate/validate.proto";

service Settings {
	rpc CreateModule (CreateModuleRequest) returns (CreateModuleReply) {
		option (google.api.http) = {
			put: "/api/v1/settings/module"
			body: "*"
		};
	}
	rpc DeleteModule (DeleteModuleRequest) returns (DeleteModuleReply) {
		option (google.api.http) = {
			delete: "/api/v1/settings/module/{id}"
		};
	}
	rpc UpdateModule (UpdateModuleRequest) returns (UpdateModuleReply) {
		option (google.api.http) = {
			post: "/api/v1/setting/module/{id}"
			body: "*"
		};
	}
	rpc GetModule (GetModuleRequest) returns (GetModuleReply) {
		option (google.api.http) = {
			get: "/api/v1/settings/module/{id}"
		};
	}
	rpc ListModules (ListModulesRequest) returns (ListModulesReply) {
		option (google.api.http) = {
			get: "/api/v1/settings/module"
		};
	}

	rpc CreateIcon(CreateIconRequest) returns (CreateIconReply) {
		option(google.api.http) = {
			put: "/api/v1/settings/icon"
			body: "*"
		};
	}
	rpc DeleteIcon(DeleteIconRequest) returns (DeleteIconReply) {
		option(google.api.http) = {
			delete: "/api/v1/settings/icon/{id}"
		};
	}
	rpc GetIcon(GetIconRequest) returns (GetIconReply) {
		option(google.api.http) = {
			get: "/api/v1/settings/icon/{id}"
		};
	}
	rpc LostIcon(ListIconRequest) returns (ListIconReply) {
		option(google.api.http) = {
			get: "/api/v1/settings/icons"
		};
	}
}

message CreateIconRequest {
	bytes src = 1;
}
message CreateIconReply {}

message DeleteIconRequest {
	uint32 id = 1;
}
message DeleteIconReply {}

message GetIconRequest {
	uint32 id = 1;
}
message GetIconReply {
	bytes image = 1;
}

message ListIconRequest {}
message ListIconReply {
	message Image {
		uint32 id = 1;
		bytes src = 2;
	}
	repeated Image images = 1;
}

message CreateModuleRequest {
	string code = 1 [(validate.rules).string = {min_len: 1}];
	string name = 2 [(validate.rules).string = {min_len: 1}];
	string alias = 3;
}
message CreateModuleReply {}

message DeleteModuleRequest {
	uint32 id = 1;
}
message DeleteModuleReply {}

message UpdateModuleRequest {
	uint32 id = 1;
	string code = 2 [(validate.rules).string = {min_len: 1}];
	string name = 3 [(validate.rules).string = {min_len: 1}];
	string alias = 4;
}
message UpdateModuleReply {}

message Module {
	uint32 id = 1;
	string code = 2;
	string name = 3;
	string alias = 4;
}

message GetModuleRequest {
	uint32 id = 1;
}
message GetModuleReply {
	Module module = 1;
}

message ListModulesRequest {}
message ListModulesReply {
	repeated Module modules = 1;
}