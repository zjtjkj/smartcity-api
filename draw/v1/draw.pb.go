// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: draw/v1/draw.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DrawImageRequest_Position int32

const (
	DrawImageRequest_TopLeft      DrawImageRequest_Position = 0
	DrawImageRequest_TopCenter    DrawImageRequest_Position = 1
	DrawImageRequest_TopRight     DrawImageRequest_Position = 2
	DrawImageRequest_BottomLeft   DrawImageRequest_Position = 3
	DrawImageRequest_BottomCenter DrawImageRequest_Position = 4
	DrawImageRequest_BottomRight  DrawImageRequest_Position = 5
)

// Enum value maps for DrawImageRequest_Position.
var (
	DrawImageRequest_Position_name = map[int32]string{
		0: "TopLeft",
		1: "TopCenter",
		2: "TopRight",
		3: "BottomLeft",
		4: "BottomCenter",
		5: "BottomRight",
	}
	DrawImageRequest_Position_value = map[string]int32{
		"TopLeft":      0,
		"TopCenter":    1,
		"TopRight":     2,
		"BottomLeft":   3,
		"BottomCenter": 4,
		"BottomRight":  5,
	}
)

func (x DrawImageRequest_Position) Enum() *DrawImageRequest_Position {
	p := new(DrawImageRequest_Position)
	*p = x
	return p
}

func (x DrawImageRequest_Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrawImageRequest_Position) Descriptor() protoreflect.EnumDescriptor {
	return file_draw_v1_draw_proto_enumTypes[0].Descriptor()
}

func (DrawImageRequest_Position) Type() protoreflect.EnumType {
	return &file_draw_v1_draw_proto_enumTypes[0]
}

func (x DrawImageRequest_Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DrawImageRequest_Position.Descriptor instead.
func (DrawImageRequest_Position) EnumDescriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 0}
}

type DrawImageRequest_Config_Mode int32

const (
	DrawImageRequest_Config_Extend DrawImageRequest_Config_Mode = 0
	DrawImageRequest_Config_Float  DrawImageRequest_Config_Mode = 1
)

// Enum value maps for DrawImageRequest_Config_Mode.
var (
	DrawImageRequest_Config_Mode_name = map[int32]string{
		0: "Extend",
		1: "Float",
	}
	DrawImageRequest_Config_Mode_value = map[string]int32{
		"Extend": 0,
		"Float":  1,
	}
)

func (x DrawImageRequest_Config_Mode) Enum() *DrawImageRequest_Config_Mode {
	p := new(DrawImageRequest_Config_Mode)
	*p = x
	return p
}

func (x DrawImageRequest_Config_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DrawImageRequest_Config_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_draw_v1_draw_proto_enumTypes[1].Descriptor()
}

func (DrawImageRequest_Config_Mode) Type() protoreflect.EnumType {
	return &file_draw_v1_draw_proto_enumTypes[1]
}

func (x DrawImageRequest_Config_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DrawImageRequest_Config_Mode.Descriptor instead.
func (DrawImageRequest_Config_Mode) EnumDescriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 3, 0}
}

type DrawImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *DrawImageRequest_Config  `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Images []*DrawImageRequest_Image `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *DrawImageRequest) Reset() {
	*x = DrawImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageRequest) ProtoMessage() {}

func (x *DrawImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageRequest.ProtoReflect.Descriptor instead.
func (*DrawImageRequest) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0}
}

func (x *DrawImageRequest) GetConfig() *DrawImageRequest_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DrawImageRequest) GetImages() []*DrawImageRequest_Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type DrawImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *DrawImageReply) Reset() {
	*x = DrawImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageReply) ProtoMessage() {}

func (x *DrawImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageReply.ProtoReflect.Descriptor instead.
func (*DrawImageReply) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{1}
}

func (x *DrawImageReply) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type DrawImageRequest_Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X uint32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y uint32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *DrawImageRequest_Point) Reset() {
	*x = DrawImageRequest_Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageRequest_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageRequest_Point) ProtoMessage() {}

func (x *DrawImageRequest_Point) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageRequest_Point.ProtoReflect.Descriptor instead.
func (*DrawImageRequest_Point) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DrawImageRequest_Point) GetX() uint32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *DrawImageRequest_Point) GetY() uint32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type DrawImageRequest_Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BorderR          uint32                    `protobuf:"varint,1,opt,name=border_r,json=borderR,proto3" json:"border_r,omitempty"`
	BorderG          uint32                    `protobuf:"varint,2,opt,name=border_g,json=borderG,proto3" json:"border_g,omitempty"`
	BorderB          uint32                    `protobuf:"varint,3,opt,name=border_b,json=borderB,proto3" json:"border_b,omitempty"`
	BorderA          uint32                    `protobuf:"varint,4,opt,name=border_a,json=borderA,proto3" json:"border_a,omitempty"`
	LabelR           uint32                    `protobuf:"varint,5,opt,name=label_r,json=labelR,proto3" json:"label_r,omitempty"`
	LabelG           uint32                    `protobuf:"varint,6,opt,name=label_g,json=labelG,proto3" json:"label_g,omitempty"`
	LabelB           uint32                    `protobuf:"varint,7,opt,name=label_b,json=labelB,proto3" json:"label_b,omitempty"`
	LabelA           uint32                    `protobuf:"varint,8,opt,name=label_a,json=labelA,proto3" json:"label_a,omitempty"`
	LabelBackgroundR uint32                    `protobuf:"varint,9,opt,name=label_background_r,json=labelBackgroundR,proto3" json:"label_background_r,omitempty"`
	LabelBackgroundG uint32                    `protobuf:"varint,10,opt,name=label_background_g,json=labelBackgroundG,proto3" json:"label_background_g,omitempty"`
	LabelBackgroundB uint32                    `protobuf:"varint,11,opt,name=label_background_b,json=labelBackgroundB,proto3" json:"label_background_b,omitempty"`
	LabelBackgroundA uint32                    `protobuf:"varint,12,opt,name=label_background_a,json=labelBackgroundA,proto3" json:"label_background_a,omitempty"`
	LabelContent     string                    `protobuf:"bytes,13,opt,name=label_content,json=labelContent,proto3" json:"label_content,omitempty"`
	FontSize         uint32                    `protobuf:"varint,14,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	BorderWidth      uint32                    `protobuf:"varint,15,opt,name=border_width,json=borderWidth,proto3" json:"border_width,omitempty"`
	Position         DrawImageRequest_Position `protobuf:"varint,16,opt,name=position,proto3,enum=api.draw.v1.DrawImageRequest_Position" json:"position,omitempty"`
	Points           []*DrawImageRequest_Point `protobuf:"bytes,17,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *DrawImageRequest_Object) Reset() {
	*x = DrawImageRequest_Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageRequest_Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageRequest_Object) ProtoMessage() {}

func (x *DrawImageRequest_Object) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageRequest_Object.ProtoReflect.Descriptor instead.
func (*DrawImageRequest_Object) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DrawImageRequest_Object) GetBorderR() uint32 {
	if x != nil {
		return x.BorderR
	}
	return 0
}

func (x *DrawImageRequest_Object) GetBorderG() uint32 {
	if x != nil {
		return x.BorderG
	}
	return 0
}

func (x *DrawImageRequest_Object) GetBorderB() uint32 {
	if x != nil {
		return x.BorderB
	}
	return 0
}

func (x *DrawImageRequest_Object) GetBorderA() uint32 {
	if x != nil {
		return x.BorderA
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelR() uint32 {
	if x != nil {
		return x.LabelR
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelG() uint32 {
	if x != nil {
		return x.LabelG
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelB() uint32 {
	if x != nil {
		return x.LabelB
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelA() uint32 {
	if x != nil {
		return x.LabelA
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelBackgroundR() uint32 {
	if x != nil {
		return x.LabelBackgroundR
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelBackgroundG() uint32 {
	if x != nil {
		return x.LabelBackgroundG
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelBackgroundB() uint32 {
	if x != nil {
		return x.LabelBackgroundB
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelBackgroundA() uint32 {
	if x != nil {
		return x.LabelBackgroundA
	}
	return 0
}

func (x *DrawImageRequest_Object) GetLabelContent() string {
	if x != nil {
		return x.LabelContent
	}
	return ""
}

func (x *DrawImageRequest_Object) GetFontSize() uint32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *DrawImageRequest_Object) GetBorderWidth() uint32 {
	if x != nil {
		return x.BorderWidth
	}
	return 0
}

func (x *DrawImageRequest_Object) GetPosition() DrawImageRequest_Position {
	if x != nil {
		return x.Position
	}
	return DrawImageRequest_TopLeft
}

func (x *DrawImageRequest_Object) GetPoints() []*DrawImageRequest_Point {
	if x != nil {
		return x.Points
	}
	return nil
}

type DrawImageRequest_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src     []byte                     `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
	Quality uint32                     `protobuf:"varint,2,opt,name=quality,proto3" json:"quality,omitempty"`
	Objects []*DrawImageRequest_Object `protobuf:"bytes,3,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *DrawImageRequest_Image) Reset() {
	*x = DrawImageRequest_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageRequest_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageRequest_Image) ProtoMessage() {}

func (x *DrawImageRequest_Image) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageRequest_Image.ProtoReflect.Descriptor instead.
func (*DrawImageRequest_Image) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 2}
}

func (x *DrawImageRequest_Image) GetSrc() []byte {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *DrawImageRequest_Image) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DrawImageRequest_Image) GetObjects() []*DrawImageRequest_Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

type DrawImageRequest_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Combination      bool                         `protobuf:"varint,1,opt,name=combination,proto3" json:"combination,omitempty"`
	LabelContent     string                       `protobuf:"bytes,2,opt,name=label_content,json=labelContent,proto3" json:"label_content,omitempty"`
	LabelR           uint32                       `protobuf:"varint,3,opt,name=label_r,json=labelR,proto3" json:"label_r,omitempty"`
	LabelG           uint32                       `protobuf:"varint,4,opt,name=label_g,json=labelG,proto3" json:"label_g,omitempty"`
	LabelB           uint32                       `protobuf:"varint,5,opt,name=label_b,json=labelB,proto3" json:"label_b,omitempty"`
	LabelA           uint32                       `protobuf:"varint,6,opt,name=label_a,json=labelA,proto3" json:"label_a,omitempty"`
	LabelBackgroundR uint32                       `protobuf:"varint,7,opt,name=label_background_r,json=labelBackgroundR,proto3" json:"label_background_r,omitempty"`
	LabelBackgroundG uint32                       `protobuf:"varint,8,opt,name=label_background_g,json=labelBackgroundG,proto3" json:"label_background_g,omitempty"`
	LabelBackgroundB uint32                       `protobuf:"varint,9,opt,name=label_background_b,json=labelBackgroundB,proto3" json:"label_background_b,omitempty"`
	LabelBackgroundA uint32                       `protobuf:"varint,10,opt,name=label_background_a,json=labelBackgroundA,proto3" json:"label_background_a,omitempty"`
	FontSize         uint32                       `protobuf:"varint,11,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	BackgroundR      uint32                       `protobuf:"varint,12,opt,name=background_r,json=backgroundR,proto3" json:"background_r,omitempty"`
	BackgroundG      uint32                       `protobuf:"varint,13,opt,name=background_g,json=backgroundG,proto3" json:"background_g,omitempty"`
	BackgroundB      uint32                       `protobuf:"varint,14,opt,name=background_b,json=backgroundB,proto3" json:"background_b,omitempty"`
	BackgroundA      uint32                       `protobuf:"varint,15,opt,name=background_a,json=backgroundA,proto3" json:"background_a,omitempty"`
	Quality          uint32                       `protobuf:"varint,16,opt,name=quality,proto3" json:"quality,omitempty"`
	Mode             DrawImageRequest_Config_Mode `protobuf:"varint,17,opt,name=mode,proto3,enum=api.draw.v1.DrawImageRequest_Config_Mode" json:"mode,omitempty"`
	Position         DrawImageRequest_Position    `protobuf:"varint,18,opt,name=position,proto3,enum=api.draw.v1.DrawImageRequest_Position" json:"position,omitempty"`
}

func (x *DrawImageRequest_Config) Reset() {
	*x = DrawImageRequest_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_draw_v1_draw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawImageRequest_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawImageRequest_Config) ProtoMessage() {}

func (x *DrawImageRequest_Config) ProtoReflect() protoreflect.Message {
	mi := &file_draw_v1_draw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawImageRequest_Config.ProtoReflect.Descriptor instead.
func (*DrawImageRequest_Config) Descriptor() ([]byte, []int) {
	return file_draw_v1_draw_proto_rawDescGZIP(), []int{0, 3}
}

func (x *DrawImageRequest_Config) GetCombination() bool {
	if x != nil {
		return x.Combination
	}
	return false
}

func (x *DrawImageRequest_Config) GetLabelContent() string {
	if x != nil {
		return x.LabelContent
	}
	return ""
}

func (x *DrawImageRequest_Config) GetLabelR() uint32 {
	if x != nil {
		return x.LabelR
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelG() uint32 {
	if x != nil {
		return x.LabelG
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelB() uint32 {
	if x != nil {
		return x.LabelB
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelA() uint32 {
	if x != nil {
		return x.LabelA
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelBackgroundR() uint32 {
	if x != nil {
		return x.LabelBackgroundR
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelBackgroundG() uint32 {
	if x != nil {
		return x.LabelBackgroundG
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelBackgroundB() uint32 {
	if x != nil {
		return x.LabelBackgroundB
	}
	return 0
}

func (x *DrawImageRequest_Config) GetLabelBackgroundA() uint32 {
	if x != nil {
		return x.LabelBackgroundA
	}
	return 0
}

func (x *DrawImageRequest_Config) GetFontSize() uint32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *DrawImageRequest_Config) GetBackgroundR() uint32 {
	if x != nil {
		return x.BackgroundR
	}
	return 0
}

func (x *DrawImageRequest_Config) GetBackgroundG() uint32 {
	if x != nil {
		return x.BackgroundG
	}
	return 0
}

func (x *DrawImageRequest_Config) GetBackgroundB() uint32 {
	if x != nil {
		return x.BackgroundB
	}
	return 0
}

func (x *DrawImageRequest_Config) GetBackgroundA() uint32 {
	if x != nil {
		return x.BackgroundA
	}
	return 0
}

func (x *DrawImageRequest_Config) GetQuality() uint32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *DrawImageRequest_Config) GetMode() DrawImageRequest_Config_Mode {
	if x != nil {
		return x.Mode
	}
	return DrawImageRequest_Config_Extend
}

func (x *DrawImageRequest_Config) GetPosition() DrawImageRequest_Position {
	if x != nil {
		return x.Position
	}
	return DrawImageRequest_TopLeft
}

var File_draw_v1_draw_proto protoreflect.FileDescriptor

var file_draw_v1_draw_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x10, 0x0a, 0x10, 0x44, 0x72, 0x61,
	0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x77,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x45, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x1a, 0x37, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0x90, 0x4e,
	0x52, 0x01, 0x78, 0x12, 0x16, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0x90, 0x4e, 0x52, 0x01, 0x79, 0x1a, 0x8b, 0x06, 0x0a, 0x06,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18,
	0xff, 0x01, 0x52, 0x07, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x12, 0x23, 0x0a, 0x08, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x07, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x47,
	0x12, 0x23, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x07, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x12, 0x23, 0x0a, 0x08, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff,
	0x01, 0x52, 0x07, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x12, 0x21, 0x0a,
	0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x47,
	0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x42, 0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x12, 0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x12, 0x36,
	0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a,
	0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x12, 0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x12, 0x36,
	0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a,
	0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x18, 0x32, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xc8,
	0x01, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x42,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x02, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x85, 0x01, 0x0a, 0x05, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x10, 0x01, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x21,
	0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x18, 0x64, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0xd9, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff,
	0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x12, 0x21, 0x0a, 0x07, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a,
	0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x12, 0x21, 0x0a, 0x07,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x12,
	0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x12, 0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x12,
	0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x12, 0x36, 0x0a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x10, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x12,
	0x24, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x18, 0x32, 0x52, 0x08, 0x66, 0x6f, 0x6e,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x52, 0x12, 0x2b, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18,
	0xff, 0x01, 0x52, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x12,
	0x2b, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52,
	0x0b, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x12, 0x2a, 0x0a, 0x0c,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x12, 0x21, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x18, 0x64, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x01, 0x22, 0x67, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x6f, 0x70,
	0x4c, 0x65, 0x66, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66,
	0x74, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x10, 0x05, 0x22, 0x26, 0x0a, 0x0e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x32, 0x68,
	0x0a, 0x04, 0x44, 0x72, 0x61, 0x77, 0x12, 0x60, 0x0a, 0x09, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x72, 0x61, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x72, 0x61, 0x77, 0x3a, 0x01, 0x2a, 0x42, 0x18, 0x5a, 0x16, 0x64, 0x72, 0x61, 0x77,
	0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x72, 0x61, 0x77, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_draw_v1_draw_proto_rawDescOnce sync.Once
	file_draw_v1_draw_proto_rawDescData = file_draw_v1_draw_proto_rawDesc
)

func file_draw_v1_draw_proto_rawDescGZIP() []byte {
	file_draw_v1_draw_proto_rawDescOnce.Do(func() {
		file_draw_v1_draw_proto_rawDescData = protoimpl.X.CompressGZIP(file_draw_v1_draw_proto_rawDescData)
	})
	return file_draw_v1_draw_proto_rawDescData
}

var file_draw_v1_draw_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_draw_v1_draw_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_draw_v1_draw_proto_goTypes = []interface{}{
	(DrawImageRequest_Position)(0),    // 0: api.draw.v1.DrawImageRequest.Position
	(DrawImageRequest_Config_Mode)(0), // 1: api.draw.v1.DrawImageRequest.Config.Mode
	(*DrawImageRequest)(nil),          // 2: api.draw.v1.DrawImageRequest
	(*DrawImageReply)(nil),            // 3: api.draw.v1.DrawImageReply
	(*DrawImageRequest_Point)(nil),    // 4: api.draw.v1.DrawImageRequest.Point
	(*DrawImageRequest_Object)(nil),   // 5: api.draw.v1.DrawImageRequest.Object
	(*DrawImageRequest_Image)(nil),    // 6: api.draw.v1.DrawImageRequest.Image
	(*DrawImageRequest_Config)(nil),   // 7: api.draw.v1.DrawImageRequest.Config
}
var file_draw_v1_draw_proto_depIdxs = []int32{
	7, // 0: api.draw.v1.DrawImageRequest.config:type_name -> api.draw.v1.DrawImageRequest.Config
	6, // 1: api.draw.v1.DrawImageRequest.images:type_name -> api.draw.v1.DrawImageRequest.Image
	0, // 2: api.draw.v1.DrawImageRequest.Object.position:type_name -> api.draw.v1.DrawImageRequest.Position
	4, // 3: api.draw.v1.DrawImageRequest.Object.points:type_name -> api.draw.v1.DrawImageRequest.Point
	5, // 4: api.draw.v1.DrawImageRequest.Image.objects:type_name -> api.draw.v1.DrawImageRequest.Object
	1, // 5: api.draw.v1.DrawImageRequest.Config.mode:type_name -> api.draw.v1.DrawImageRequest.Config.Mode
	0, // 6: api.draw.v1.DrawImageRequest.Config.position:type_name -> api.draw.v1.DrawImageRequest.Position
	2, // 7: api.draw.v1.Draw.DrawImage:input_type -> api.draw.v1.DrawImageRequest
	3, // 8: api.draw.v1.Draw.DrawImage:output_type -> api.draw.v1.DrawImageReply
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_draw_v1_draw_proto_init() }
func file_draw_v1_draw_proto_init() {
	if File_draw_v1_draw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_draw_v1_draw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_v1_draw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_v1_draw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageRequest_Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_v1_draw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageRequest_Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_v1_draw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageRequest_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_draw_v1_draw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawImageRequest_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_draw_v1_draw_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_draw_v1_draw_proto_goTypes,
		DependencyIndexes: file_draw_v1_draw_proto_depIdxs,
		EnumInfos:         file_draw_v1_draw_proto_enumTypes,
		MessageInfos:      file_draw_v1_draw_proto_msgTypes,
	}.Build()
	File_draw_v1_draw_proto = out.File
	file_draw_v1_draw_proto_rawDesc = nil
	file_draw_v1_draw_proto_goTypes = nil
	file_draw_v1_draw_proto_depIdxs = nil
}
