// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: camera/v1/camera.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source int32

const (
	Source_Direct Source = 0 // 直连
	Source_FromGB Source = 1 // 国标
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "Direct",
		1: "FromGB",
	}
	Source_value = map[string]int32{
		"Direct": 0,
		"FromGB": 1,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_v1_camera_proto_enumTypes[0].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_camera_v1_camera_proto_enumTypes[0]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{0}
}

type Manufacture int32

const (
	Manufacture_Unknown Manufacture = 0 // 未知
	Manufacture_UnView  Manufacture = 1 // 宇视
	Manufacture_Hik     Manufacture = 2 // 海康
	Manufacture_DaHua   Manufacture = 3 // 大华
)

// Enum value maps for Manufacture.
var (
	Manufacture_name = map[int32]string{
		0: "Unknown",
		1: "UnView",
		2: "Hik",
		3: "DaHua",
	}
	Manufacture_value = map[string]int32{
		"Unknown": 0,
		"UnView":  1,
		"Hik":     2,
		"DaHua":   3,
	}
)

func (x Manufacture) Enum() *Manufacture {
	p := new(Manufacture)
	*p = x
	return p
}

func (x Manufacture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Manufacture) Descriptor() protoreflect.EnumDescriptor {
	return file_camera_v1_camera_proto_enumTypes[1].Descriptor()
}

func (Manufacture) Type() protoreflect.EnumType {
	return &file_camera_v1_camera_proto_enumTypes[1]
}

func (x Manufacture) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Manufacture.Descriptor instead.
func (Manufacture) EnumDescriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{1}
}

type Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // 点位ID
	Created     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"` // 创建时间
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`       // 点位名称
	Region      uint32                 `protobuf:"varint,4,opt,name=region,proto3" json:"region,omitempty"`  // 区域ID
	Icon        uint32                 `protobuf:"varint,5,opt,name=icon,proto3" json:"icon,omitempty"`
	Source      Source                 `protobuf:"varint,6,opt,name=source,proto3,enum=api.camera.v1.Source" json:"source,omitempty"`                // 点位来源
	Manufacture Manufacture            `protobuf:"varint,7,opt,name=manufacture,proto3,enum=api.camera.v1.Manufacture" json:"manufacture,omitempty"` // 生产厂商
	Movable     bool                   `protobuf:"varint,8,opt,name=movable,proto3" json:"movable,omitempty"`                                        // 是否可以遥控移动
	Longitude   float32                `protobuf:"fixed32,9,opt,name=longitude,proto3" json:"longitude,omitempty"`                                   // 经度
	Latitude    float32                `protobuf:"fixed32,10,opt,name=latitude,proto3" json:"latitude,omitempty"`                                    // 维度
	Desc        string                 `protobuf:"bytes,11,opt,name=desc,proto3" json:"desc,omitempty"`                                              // 描述
	GbDeviceId  string                 `protobuf:"bytes,12,opt,name=gb_device_id,json=gbDeviceId,proto3" json:"gb_device_id,omitempty"`              // 国标设备ID
	GbChannelId string                 `protobuf:"bytes,13,opt,name=gb_channel_id,json=gbChannelId,proto3" json:"gb_channel_id,omitempty"`           // 国标通道ID
	Ip          string                 `protobuf:"bytes,14,opt,name=ip,proto3" json:"ip,omitempty"`                                                  // IP地址
	Port        uint32                 `protobuf:"varint,15,opt,name=port,proto3" json:"port,omitempty"`                                             // 端口号
	Username    string                 `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`                                      // 用户名
	Password    string                 `protobuf:"bytes,17,opt,name=password,proto3" json:"password,omitempty"`                                      // 密码
	Rtsp        string                 `protobuf:"bytes,18,opt,name=rtsp,proto3" json:"rtsp,omitempty"`                                              // 流地址
}

func (x *Instance) Reset() {
	*x = Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{0}
}

func (x *Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instance) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetRegion() uint32 {
	if x != nil {
		return x.Region
	}
	return 0
}

func (x *Instance) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *Instance) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Direct
}

func (x *Instance) GetManufacture() Manufacture {
	if x != nil {
		return x.Manufacture
	}
	return Manufacture_Unknown
}

func (x *Instance) GetMovable() bool {
	if x != nil {
		return x.Movable
	}
	return false
}

func (x *Instance) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Instance) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Instance) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Instance) GetGbDeviceId() string {
	if x != nil {
		return x.GbDeviceId
	}
	return ""
}

func (x *Instance) GetGbChannelId() string {
	if x != nil {
		return x.GbChannelId
	}
	return ""
}

func (x *Instance) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Instance) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Instance) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Instance) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Instance) GetRtsp() string {
	if x != nil {
		return x.Rtsp
	}
	return ""
}

type CreateCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 点位唯一ID // 点位中文名称
	Region      uint32      `protobuf:"varint,2,opt,name=region,proto3" json:"region,omitempty"`
	Icon        uint32      `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Source      Source      `protobuf:"varint,4,opt,name=source,proto3,enum=api.camera.v1.Source" json:"source,omitempty"`
	Manufacture Manufacture `protobuf:"varint,5,opt,name=manufacture,proto3,enum=api.camera.v1.Manufacture" json:"manufacture,omitempty"`
	Longitude   float32     `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float32     `protobuf:"fixed32,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Desc        string      `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc,omitempty"`
	GbDeviceId  string      `protobuf:"bytes,9,opt,name=gb_device_id,json=gbDeviceId,proto3" json:"gb_device_id,omitempty"`
	GbChannelId string      `protobuf:"bytes,10,opt,name=gb_channel_id,json=gbChannelId,proto3" json:"gb_channel_id,omitempty"`
	Ip          string      `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
	Port        uint32      `protobuf:"varint,12,opt,name=port,proto3" json:"port,omitempty"`
	Username    string      `protobuf:"bytes,13,opt,name=username,proto3" json:"username,omitempty"`
	Password    string      `protobuf:"bytes,14,opt,name=password,proto3" json:"password,omitempty"`
	Rtsp        string      `protobuf:"bytes,15,opt,name=rtsp,proto3" json:"rtsp,omitempty"`
	Movable     bool        `protobuf:"varint,16,opt,name=movable,proto3" json:"movable,omitempty"`
}

func (x *CreateCameraRequest) Reset() {
	*x = CreateCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCameraRequest) ProtoMessage() {}

func (x *CreateCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCameraRequest.ProtoReflect.Descriptor instead.
func (*CreateCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCameraRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCameraRequest) GetRegion() uint32 {
	if x != nil {
		return x.Region
	}
	return 0
}

func (x *CreateCameraRequest) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *CreateCameraRequest) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Direct
}

func (x *CreateCameraRequest) GetManufacture() Manufacture {
	if x != nil {
		return x.Manufacture
	}
	return Manufacture_Unknown
}

func (x *CreateCameraRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateCameraRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateCameraRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateCameraRequest) GetGbDeviceId() string {
	if x != nil {
		return x.GbDeviceId
	}
	return ""
}

func (x *CreateCameraRequest) GetGbChannelId() string {
	if x != nil {
		return x.GbChannelId
	}
	return ""
}

func (x *CreateCameraRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CreateCameraRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *CreateCameraRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateCameraRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateCameraRequest) GetRtsp() string {
	if x != nil {
		return x.Rtsp
	}
	return ""
}

func (x *CreateCameraRequest) GetMovable() bool {
	if x != nil {
		return x.Movable
	}
	return false
}

type CreateCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateCameraReply) Reset() {
	*x = CreateCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCameraReply) ProtoMessage() {}

func (x *CreateCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCameraReply.ProtoReflect.Descriptor instead.
func (*CreateCameraReply) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{2}
}

type UpdateCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Region    uint32  `protobuf:"varint,2,opt,name=region,proto3" json:"region,omitempty"`
	Name      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Movable   bool    `protobuf:"varint,4,opt,name=movable,proto3" json:"movable,omitempty"`
	Longitude float32 `protobuf:"fixed32,5,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Latitude  float32 `protobuf:"fixed32,6,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 维度
	Desc      string  `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`             // 备注
	Username  string  `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`
	Password  string  `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"`
	Ip        string  `protobuf:"bytes,10,opt,name=ip,proto3" json:"ip,omitempty"`
	Port      uint32  `protobuf:"varint,11,opt,name=port,proto3" json:"port,omitempty"`
	Rtsp      string  `protobuf:"bytes,12,opt,name=rtsp,proto3" json:"rtsp,omitempty"`
}

func (x *UpdateCameraRequest) Reset() {
	*x = UpdateCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCameraRequest) ProtoMessage() {}

func (x *UpdateCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCameraRequest.ProtoReflect.Descriptor instead.
func (*UpdateCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCameraRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCameraRequest) GetRegion() uint32 {
	if x != nil {
		return x.Region
	}
	return 0
}

func (x *UpdateCameraRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCameraRequest) GetMovable() bool {
	if x != nil {
		return x.Movable
	}
	return false
}

func (x *UpdateCameraRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateCameraRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateCameraRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UpdateCameraRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateCameraRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateCameraRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UpdateCameraRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UpdateCameraRequest) GetRtsp() string {
	if x != nil {
		return x.Rtsp
	}
	return ""
}

type UpdateCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCameraReply) Reset() {
	*x = UpdateCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCameraReply) ProtoMessage() {}

func (x *UpdateCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCameraReply.ProtoReflect.Descriptor instead.
func (*UpdateCameraReply) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{4}
}

type DeleteCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCameraRequest) Reset() {
	*x = DeleteCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCameraRequest) ProtoMessage() {}

func (x *DeleteCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCameraRequest.ProtoReflect.Descriptor instead.
func (*DeleteCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCameraRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCameraReply) Reset() {
	*x = DeleteCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCameraReply) ProtoMessage() {}

func (x *DeleteCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCameraReply.ProtoReflect.Descriptor instead.
func (*DeleteCameraReply) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{6}
}

type GetCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCameraRequest) Reset() {
	*x = GetCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCameraRequest) ProtoMessage() {}

func (x *GetCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCameraRequest.ProtoReflect.Descriptor instead.
func (*GetCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{7}
}

func (x *GetCameraRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCameraReply) Reset() {
	*x = GetCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCameraReply) ProtoMessage() {}

func (x *GetCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCameraReply.ProtoReflect.Descriptor instead.
func (*GetCameraReply) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{8}
}

type ListCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListCameraRequest) Reset() {
	*x = ListCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCameraRequest) ProtoMessage() {}

func (x *ListCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCameraRequest.ProtoReflect.Descriptor instead.
func (*ListCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{9}
}

func (x *ListCameraRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListCameraReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCameraReply) Reset() {
	*x = ListCameraReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_v1_camera_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCameraReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCameraReply) ProtoMessage() {}

func (x *ListCameraReply) ProtoReflect() protoreflect.Message {
	mi := &file_camera_v1_camera_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCameraReply.ProtoReflect.Descriptor instead.
func (*ListCameraReply) Descriptor() ([]byte, []int) {
	return file_camera_v1_camera_proto_rawDescGZIP(), []int{10}
}

var File_camera_v1_camera_proto protoreflect.FileDescriptor

var file_camera_v1_camera_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9b, 0x04, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x62, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x62, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x67, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x74, 0x73,
	0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x74, 0x73, 0x70, 0x22, 0xe9, 0x03,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0b,
	0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x62, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x67, 0x62, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x67,
	0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x74, 0x73, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x74, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa9,
	0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x74, 0x73, 0x70, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x74, 0x73, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x20, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x42, 0x10, 0x01, 0x2a, 0x3a, 0x0a, 0x0b, 0x4d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x56, 0x69, 0x65,
	0x77, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x69, 0x6b, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x61, 0x48, 0x75, 0x61, 0x10, 0x03, 0x32, 0xba, 0x04, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x12, 0x6f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x1a, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x68, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x42, 0x19, 0x5a, 0x17, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_camera_v1_camera_proto_rawDescOnce sync.Once
	file_camera_v1_camera_proto_rawDescData = file_camera_v1_camera_proto_rawDesc
)

func file_camera_v1_camera_proto_rawDescGZIP() []byte {
	file_camera_v1_camera_proto_rawDescOnce.Do(func() {
		file_camera_v1_camera_proto_rawDescData = protoimpl.X.CompressGZIP(file_camera_v1_camera_proto_rawDescData)
	})
	return file_camera_v1_camera_proto_rawDescData
}

var file_camera_v1_camera_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_camera_v1_camera_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_camera_v1_camera_proto_goTypes = []interface{}{
	(Source)(0),                   // 0: api.camera.v1.Source
	(Manufacture)(0),              // 1: api.camera.v1.Manufacture
	(*Instance)(nil),              // 2: api.camera.v1.Instance
	(*CreateCameraRequest)(nil),   // 3: api.camera.v1.CreateCameraRequest
	(*CreateCameraReply)(nil),     // 4: api.camera.v1.CreateCameraReply
	(*UpdateCameraRequest)(nil),   // 5: api.camera.v1.UpdateCameraRequest
	(*UpdateCameraReply)(nil),     // 6: api.camera.v1.UpdateCameraReply
	(*DeleteCameraRequest)(nil),   // 7: api.camera.v1.DeleteCameraRequest
	(*DeleteCameraReply)(nil),     // 8: api.camera.v1.DeleteCameraReply
	(*GetCameraRequest)(nil),      // 9: api.camera.v1.GetCameraRequest
	(*GetCameraReply)(nil),        // 10: api.camera.v1.GetCameraReply
	(*ListCameraRequest)(nil),     // 11: api.camera.v1.ListCameraRequest
	(*ListCameraReply)(nil),       // 12: api.camera.v1.ListCameraReply
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_camera_v1_camera_proto_depIdxs = []int32{
	13, // 0: api.camera.v1.Instance.created:type_name -> google.protobuf.Timestamp
	0,  // 1: api.camera.v1.Instance.source:type_name -> api.camera.v1.Source
	1,  // 2: api.camera.v1.Instance.manufacture:type_name -> api.camera.v1.Manufacture
	0,  // 3: api.camera.v1.CreateCameraRequest.source:type_name -> api.camera.v1.Source
	1,  // 4: api.camera.v1.CreateCameraRequest.manufacture:type_name -> api.camera.v1.Manufacture
	3,  // 5: api.camera.v1.Camera.CreateCamera:input_type -> api.camera.v1.CreateCameraRequest
	5,  // 6: api.camera.v1.Camera.UpdateCamera:input_type -> api.camera.v1.UpdateCameraRequest
	7,  // 7: api.camera.v1.Camera.DeleteCamera:input_type -> api.camera.v1.DeleteCameraRequest
	9,  // 8: api.camera.v1.Camera.GetCamera:input_type -> api.camera.v1.GetCameraRequest
	11, // 9: api.camera.v1.Camera.ListCamera:input_type -> api.camera.v1.ListCameraRequest
	4,  // 10: api.camera.v1.Camera.CreateCamera:output_type -> api.camera.v1.CreateCameraReply
	6,  // 11: api.camera.v1.Camera.UpdateCamera:output_type -> api.camera.v1.UpdateCameraReply
	8,  // 12: api.camera.v1.Camera.DeleteCamera:output_type -> api.camera.v1.DeleteCameraReply
	10, // 13: api.camera.v1.Camera.GetCamera:output_type -> api.camera.v1.GetCameraReply
	12, // 14: api.camera.v1.Camera.ListCamera:output_type -> api.camera.v1.ListCameraReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_camera_v1_camera_proto_init() }
func file_camera_v1_camera_proto_init() {
	if File_camera_v1_camera_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_camera_v1_camera_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_v1_camera_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCameraReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_camera_v1_camera_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_camera_v1_camera_proto_goTypes,
		DependencyIndexes: file_camera_v1_camera_proto_depIdxs,
		EnumInfos:         file_camera_v1_camera_proto_enumTypes,
		MessageInfos:      file_camera_v1_camera_proto_msgTypes,
	}.Build()
	File_camera_v1_camera_proto = out.File
	file_camera_v1_camera_proto_rawDesc = nil
	file_camera_v1_camera_proto_goTypes = nil
	file_camera_v1_camera_proto_depIdxs = nil
}
