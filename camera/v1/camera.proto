syntax = "proto3";

package api.camera.v1;

option go_package = "camera/api/camera/v1;v1";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service Camera {
	rpc CreateCamera (CreateCameraRequest) returns (CreateCameraReply) {
		option (google.api.http) = {
			put: "/api/v1/camera"
			body: "*"
		};
	}
	rpc UpdateCamera (UpdateCameraRequest) returns (UpdateCameraReply) {
		option (google.api.http) = {
			post: "/api/v1/camera/{id}"
			body: "*"
		};
	}
	rpc DeleteCamera (DeleteCameraRequest) returns (DeleteCameraReply) {
		option (google.api.http) = {
			delete: "/api/v1/camera/{id}"
		};
	}
	rpc GetCamera (GetCameraRequest) returns (GetCameraReply) {
		option (google.api.http) = {
			get: "/api/v1/camera/{id}"
		};
	}
	rpc getCameraByGBInfo(GetCameraByGBInfoRequest) returns (GetCameraByGBInfoReply) {
		option (google.api.http) = {
			post: "/api/v1/camera/gb"
			body: "*"
		};
	}
	rpc ListCameraByRegion (ListCameraByRegionRequest) returns (ListCameraByRegionReply) {
		option (google.api.http) = {
			get: "/api/v1/cameras/{id}"
		};
	}
	rpc ListCameraByKey (ListCameraByKeyRequest) returns (ListCameraByKeyReply) {
		option (google.api.http) = {
			post: "/api/v1/cameras"
			body: "*"
		};
	}
}

enum Source {
	Direct = 0;  // 直连
	FromGB = 1;  // 国标
}
enum Manufacture {
	Unknown = 0;  // 未知
	UnView = 1;   // 宇视
	Hik = 2;      // 海康
	DaHua = 3;    // 大华
}
message Instance {
	string id = 1; // 点位ID
	google.protobuf.Timestamp created = 2; // 创建时间
	string name = 3;  // 点位名称
	uint32 region = 4; // 区域ID
	Source source = 6; // 点位来源
	Manufacture manufacture = 7;  // 生产厂商
	bool movable = 8; // 是否可以遥控移动
	float longitude = 9; // 经度
	float latitude = 10; // 维度
	string desc = 11; // 描述
	string gb_device_id = 12; // 国标设备ID
	string gb_channel_id = 13; // 国标通道ID
	string ip = 14; // IP地址
	uint32 port = 15; // 端口号
	string username = 16; // 用户名
	string password = 17; // 密码
	string rtsp = 18; // 流地址
	uint32 attr = 19; // 点位属性
}


message CreateCameraRequest {
	string name = 1 [(validate.rules).string = {min_len: 1}]; // 点位唯一ID // 点位中文名称
	uint32 region = 2;
	uint32 icon = 3;
	Source source = 4;
	Manufacture manufacture = 5;
	float longitude = 6;
	float latitude = 7;
	string desc = 8;
	string gb_device_id = 9;
	string gb_channel_id = 10;
	string ip = 11;
	uint32 port = 12;
	string username = 13;
	string password = 14;
	string rtsp = 15;
	bool movable = 16;
	uint32 attr = 17;
}
message CreateCameraReply {}

message UpdateCameraRequest {
	string id = 1;
	uint32 region = 2;
	string name = 3;
	bool movable = 4;
	float longitude = 5;	 // 经度
	float latitude = 6;    // 维度
	string desc= 7;        // 备注
	string username = 8;
	string password = 9;
	string ip = 10;
	uint32 port = 11;
	string rtsp = 12;
}
message UpdateCameraReply {}

message DeleteCameraRequest {
	string id = 1;
}
message DeleteCameraReply {}

message GetCameraRequest {
	string id = 1;
}
message GetCameraReply {
	Instance camera = 1;
}

message GetCameraByGBInfoRequest {
	string device = 1;
	string channel = 2;
}
message GetCameraByGBInfoReply {
	Instance Camera = 1;
}

message ListCameraByRegionRequest {
	uint32 id = 1;
	uint32 index = 2;
	uint32 size = 3;
}
message ListCameraByRegionReply {
	repeated Instance camera = 1;
	uint32 index = 2;
	uint32 size = 3;
	uint32 pages = 4;
	uint32 total = 5;
}

message ListCameraByKeyRequest {
	string key = 1;
	uint32 index = 2;
	uint32 size = 3;
}
message ListCameraByKeyReply {
	repeated Instance camera = 1;
	uint32 index = 2;
	uint32 size = 3;
	uint32 pages = 4;
	uint32 total = 5;
}